substitutions:
  name: ir-transmitter
  ssid: !secret ssid
  ssid_pass: !secret ssid_pass
  webserver_user: !secret webserver_user
  webserver_pass: !secret webserver_pass
  fallback_pass: !secret fallback_pass
 
# Basic configuration for an ESP32 device
esphome:
  name: ${name}
  friendly_name: ${name}
 
# Hardware configuration
esp32:
  board: esp32dev
  framework:
    type: esp-idf
 
# Enable Home Assistant API
api:
 
# Enable over-the-air updates
ota:
  platform: esphome
 
wifi:
  ssid: ${ssid}
  password: ${ssid_pass}
 
  ap:
    ssid: ESPHome ${name}
    password: ${fallback_pass}
 
captive_portal:
 
# Enable logging
logger:
  level: DEBUG
 
web_server:
  port: 80
  auth:
    username: ${webserver_user}
    password: ${webserver_pass}
 
# IR Transmitter configuration
remote_transmitter:
  pin: GPIO13
  carrier_duty_percent: 50%
 
# IR Control buttons
button:
  - platform: template
    name: "IR ON"
    icon: "mdi:power-on"
    on_press:
      - logger.log: "Sending IR ON command (0xffe01f)"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x07
          command_repeats: 2
 
  - platform: template
    name: "IR OFF"
    icon: "mdi:power-off"
    on_press:
      - logger.log: "Sending IR OFF command (0xff609f)"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x06
          command_repeats: 2
 
  - platform: template
    name: "IR RED"
    icon: "mdi:palette"
    on_press:
      - logger.log: "Sending IR RED command"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x09
          command_repeats: 2
 
  - platform: template
    name: "IR WHITE"
    icon: "mdi:lightbulb"
    on_press:
      - logger.log: "Sending IR WHITE command"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x11
          command_repeats: 2
 
  - platform: template
    name: "IR GREEN"
    icon: "mdi:palette"
    on_press:
      - logger.log: "Sending IR GREEN command (trying 0x50)"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x08
          command_repeats: 2
 
  - platform: template
    name: "IR BLUE"
    icon: "mdi:palette"
    on_press:
      - logger.log: "Sending IR BLUE command (trying 0x10)"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x10
          command_repeats: 2
 
  - platform: template
    name: "IR BRIGHTNESS UP"
    icon: "mdi:brightness-6"
    on_press:
      - logger.log: "Sending IR BRIGHTNESS UP command"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x05
          command_repeats: 2
 
  - platform: template
    name: "IR BRIGHTNESS DOWN"
    icon: "mdi:brightness-4"
    on_press:
      - logger.log: "Sending IR BRIGHTNESS DOWN command"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x04
          command_repeats: 2
 
  - platform: template
    name: "IR STROBE MODE"
    icon: "mdi:strobe"
    on_press:
      - logger.log: "Sending IR STROBE MODE command"
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: 0x17
          command_repeats: 2
 
  - platform: template
    name: "Test Command +1"
    icon: "mdi:plus"
    on_press:
      - lambda: |-
          id(test_command) += 1;
          if (id(test_command) > 255) id(test_command) = 0;
          ESP_LOGI("test", "Testing command: 0x%02X", id(test_command));
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: !lambda 'return id(test_command);'
          command_repeats: 2
 
  - platform: template
    name: "Test Command -1"
    icon: "mdi:minus"
    on_press:
      - lambda: |-
          id(test_command) -= 1;
          if (id(test_command) < 0) id(test_command) = 255;
          ESP_LOGI("test", "Testing command: 0x%02X", id(test_command));
      - remote_transmitter.transmit_nec:
          address: 0xFF00
          command: !lambda 'return id(test_command);'
          command_repeats: 2
 
  - platform: template
    name: "Reset to 0x10"
    icon: "mdi:refresh"
    on_press:
      - lambda: |-
          id(test_command) = 16;  // Reset to 0x10
          ESP_LOGI("test", "Reset to command: 0x%02X", id(test_command));
 
globals:
  - id: test_command
    type: int
    initial_value: '16'  # Start with 0x10 (working blue command)